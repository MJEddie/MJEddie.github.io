{"pages":[],"posts":[{"title":"Command Line 常用指令","text":"Command Line 是什麼？Command-Line Interface（命令列介面，簡稱CLI）是在圖形使用者介面得到普及之前使用最為廣泛的使用者介面，它通常不支援滑鼠，用戶通過鍵盤輸入指令，電腦接收到指令後，予以執行。也有人稱之為文字使用者介面（character user interface, CUI） Command Line 基本指令 pwd：print working directory，印出現在資料夾位置 ls：list contents，列出資料夾內所有檔案 ls -l：列出詳細資訊 ls -a：可以看到隱藏的檔案 ls -al:列出詳細資訊，包含隱藏檔案 ls -R：可以看到所有的子目錄，較少用 可以看到 ls -l 中列出的資訊中包含擁有者、權限以及上次修改時間 cd：change directory，切換資料夾 cd ..：上層資料夾 cd ../..：上上層資料夾 指令練習 mkdir：make directory，建立資料夾 指令練習，可以看到新增了一個 “practice” 資料夾 touch：新增檔案，如果輸入的檔案存在則會修改檔案時間 指令練習，進入剛新增的資料夾，新增一個 “index.html” 的檔案 cp：copy，複製檔案 指令練習，複製 “index.html” 為 “about.html” mv：move，移動檔案，或是重新命名檔案名稱 指令練習，移動 “about.html” 到上一層 “Music” 資料夾中 cd 可使用相對路徑或是絕對路徑，要將檔案移動到上一層時必須使用絕對路徑 將剛移動過來的 “about.html” 重新命名為 “index.html” rm：remove，刪除檔案 rmdir，刪除資料夾 rm -rf，強制刪除檔案，小心使用 指令練習，將剛新增的 “practice” 資料夾刪除 cat：查看檔案內容 可以看到 “about.html” 裡的內容為 “Hello” 原本 about.html 裡是沒有東西，先用 vim 指令編輯 about.html更多 vim 的操作可以參考 簡明 Vim 文字編輯器操作入門教學 學習資料Linux Command","link":"/2020/11/20/Command-Line%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/"},{"title":"Git &amp; Github 入門","text":"Git 是什麼？一種分散式版本控制系統 (Distributed Version Control Systems)，可藉由它產生一個數據庫 (repository)，並且做到分散式版本控制。由於可在多處放置同一份程式碼、歷史紀錄追蹤與回朔，讓協同開發變得容易。 Git 和 GitHub 的差異git 是一套軟體系統，而 GitHub 則是運用 git 提供程式原始碼版本控制與代管服務的服務平台。 Git 安裝Git 軟體安裝 Git 版本控制基本觀念 Git 常用指令 初始化數據庫： git init 查詢當前狀態：git status 將檔案加入到索引：git add . 將索引檔案變成一個更新(commit)：git commit -m &quot;修改內容&quot; 觀察 commit 歷史紀錄： git log 下載遠端數據庫： git clone 數據庫網址 更新遠端數據庫： git push origin master GitHub 專案建立申請完 Github 帳號後點選右上角來新增 new repository 這邊輸入專案的名稱 專案建立之後如果是全新開始，請依「create a new repository on the command line」的指示進行；如果是要上傳現存專案，則依照「push an existing repository from the command line」指示進行。 GitHub page 實作進入到專案資料夾，git status 確認資料夾內的狀態，可以看到 index.html 跟 css 資料夾裡的 main.css 檔案還未加入索引 這邊我用舊有專案示範，有先修改內容，所以索引內還沒有修改後的 index.html 跟 main.css 把修改後的 index.html 和 main.css 用 git add 指令加入索引中，再次確認 git 狀態，可以看到檔案顏色變成綠色，代表已經加入 接著 git commit -m &quot;2020style&quot; 加入到本地數據庫，並註解 “2020style” 再來用 git branch gh-page 來新增名為 gh-page 的分支，之後用 git branch 來確認是否新增成功，成功的話可以看到我們現在有兩個分支 輸入 git checkout gh-page 切換到 gh-page 分支 輸入 git push將本地的檔案 push 到 GitHub 上，但是 GitHub 還沒有這個分支，所以會提示我們要輸入以下指令來完成 git push --set-upstream origin gh-pages 接下來在 GitHub 頁面上可以看到分支建立成功 剛剛新增的檔案也在分支內 之後就可以透過網址來瀏覽我們的靜態網頁https://mjeddie.github.io/RootsSkate/ 參考資料Git 官方教學文件 Git 與 Github 是什麼？如何使用 Git？ 延伸閱讀5xruby - 為你自己學 Git ihower 的 Git 教室 保哥 - 30 天精通 Git 版本控管 連猴子都能懂得 Git 入門教學","link":"/2020/11/21/Git%E5%85%A5%E9%96%80/"},{"title":"Markdown語法","text":"Markdown 語法是什麼？ Markdown 是一種輕量級標記式語言，為了實現易讀易寫的特性 Markdown 語法全由標點符號所組成，讓它們看起來就像是所要表達的意思。 因為其易讀易寫的特性，目前許多網站都廣泛使用 Markdown 語法。 一、常用功能 Markdown語法：123456789101112斜體：在兩邊加上 *星號* 或是 _底線_粗體：在兩邊加上 **兩個星號** 或是 __兩個底線__也可以用 **星號 與 _底線_**刪除線：在兩邊加上 ~~兩個波浪~~引言(註解)：&gt; 換行：需在最後面+`兩個空白鍵`·· &gt; 先以··表示空白 顯示結果：斜體：在兩邊加上 星號 或是 底線 粗體：在兩邊加上 兩個星號 或是 兩個底線 也可以用 星號 與 底線 刪除線：在兩邊加上 兩個波浪 引用文字(註解)： 換行：需在最後面+兩個空白鍵··先以··表示空白 二、標題Markdown語法：12345678Markdown 提供了六種規格的，分別對應 Html 標籤中的`&lt;h1&gt; ~ &lt;h6&gt;`# H1## H2### H3#### H4##### H5###### H6 顯示結果：H1H2H3H4H5H6三、清單Markdown 支援無序清單和有序清單，要在清單下加入段落只要 +tab 就好。無序清單可使用星號、加號或是減號作為標記： Markdown語法：123* 無序清單+ 這也是清單- 這還是清單 顯示結果： 無序清單 這也是清單 這還是清單 有序清單則使用數字接一個英文句點： Markdown語法：121. 有序清單１2. 有序清單２ 顯示結果： 有序清單１ 有序清單２ 四、連結Markdown語法：1234567891011* 連結兩邊加上`&lt;` `&gt;`就會產生超連結 &lt;https://images.unsplash.com/photo-1584342864307-03dae979b7db?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=400&amp;q=80&gt; * 名稱兩邊加上`[` `]`然後再連結兩邊加上`(` `)`就可以將連結替換成文字連結 [傳送門](https://images.unsplash.com/photo-1584342864307-03dae979b7db?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=400&amp;q=80) * 將`[` `]`前+`!`，則可以產生圖片 (把滑鼠指向圖片可以看到註解） ![圖片參考名稱](https://images.unsplash.com/photo-1584342864307-03dae979b7db?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=400&amp;q=80 &quot;傳送門&quot;) 顯示結果： 連結兩邊加上&lt; &gt;就會產生超連結 https://images.unsplash.com/photo-1584342864307-03dae979b7db?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=400&amp;q=80 名稱兩邊加上[ ]然後再連結兩邊加上( )就可以將連結替換成文字連結 傳送門 將[ ]前+!，則可以產生圖片 (把滑鼠指向圖片可以看到註解） 五、程式碼123行內的 `程式碼` 用 `反引號` 包起來區塊的 `程式碼` 用 ```三個反引號```包起來記得要加上語言名稱 Markdown語法：12var s = &quot;JavaScript Syntax Highlighter&quot;;alert(s); 12$s = &quot;PHP Syntax Highlighter&quot;;echo $s; 顯示結果：12var s = &quot;JavaScript Syntax Highlighter&quot;;alert(s); 12$s = &quot;PHP Syntax Highlighter&quot;;echo $s; 參考資料Markdown 文件","link":"/2020/11/17/Markdown%E8%AA%9E%E6%B3%95/"},{"title":"Hexo Blog 架設","text":"前言第一篇文章來記錄一下 Hexo Blog 的架設過程，也是參考了很多資料才寫出來的，如果有錯誤的地方還請不吝指教。 安裝需求在安裝 HEXO 前我們要先確認電腦已經安裝好 Node.js 跟 Git ，因為 Hexo 是基於 Node.js 的開發套件，所以要使用前必須要先安裝 NPM(Node Package Manager) ， Git 則是為了能夠在 GitHub 上架設網站的伺服器，還沒安裝的話到官網下載安裝即可。 安裝 HEXO確認 Node.js &amp; Git 安裝好之後，終端機輸入: $ npm install hexo-cli -g (完成後用 hexo v 指令確認是否安裝成功，有出現版本號就完成安裝) $ hexo init blog $ cd blog $ npm install $ hexo server or $ hexo s 設定 HEXO_config.yml網站配置檔案，可以修改大部分的設定，像是標題、敘述、支援語言、主題等。 themes網站主題放置的資料夾，官網有提供許多主題供使用。 第一篇文章輸入指令 $ hexo new &lt;title&gt; 後在source/_posts 中將看到 “ 佈署上 GitHub修改 _config.yml 12deploy: type: git 安裝 hexo-deployer-git 1$ npm install hexo-deployer-git --save 修改 _config.yml 1234deploy: type: git repo: https://github.com/&lt;yourAccount&gt;/&lt;repo&gt; branch: &lt;your branch&gt; 執行 hexo deploy -g 就可以將網站佈署到 GitHub上。接著輸入 &lt;yourAccount&gt;.github.io就能看到自己的網站囉。","link":"/2020/11/16/Hexo-Blog/"},{"title":"[切版練習] - RootsSkate","text":"這是第一個練習切版的網頁，版面配置參考不少網站後自己編排，排版方面都使用 float 進行排版。 DemoRootsSkate Intro 網頁介紹這是一個滑板的購物網站，總共有三個頁面：Home、About、Contact，每個頁面都在右下角有快速返回首頁的按鈕設計。 Home：基本 logo 圖、navbar，首圖和標語，接著是商品的資訊，最後則是 footer 以及社群 icon。 About：相同的 logo 圖、 navbar 以及 footer，接著是頁面的首圖與標語、品牌的介紹，人物介紹帶有簡易的動畫以及社群的功能。 Contact：相同的 logo 圖、 navbar 以及 footer，首圖部分則是利用 iframe 嵌入 google 地圖，側邊是關於商店的聯絡資訊以及營業時間，form 表單包含四個 input 一個 textarea，搭配一個 submit 的按鈕。 Layout Notes一開始需要先做 reset 的動作，可以在 CSS 設定或是直接引入 normalize.css 檔案來幫我們做 reset 的動作。 box-sizing: border-box; 這個設定是讓 padding 以及 border 的修改不會改變到 box model 的大小。 首先我們會做一些全域的設定，像是字型、大小、渲染時的平滑效果以及 ul 的設定。 123456789101112131415161718* { -webkit-box-sizing: border-box; box-sizing: border-box;}body { font-family: 'Source Sans Pro', sans-serif; font-size: 15px; font-weight: 400; -webkit-font-smoothing: antialiased; -moz-font-smoothing: antialiased;}ul { margin: 0; padding-left: 0; list-style-type: none;} Home 這邊要處理的分別是 logo 圖跟我們的 navbar，圖片的高度跟我們的 navbar 高度一樣而不會超出，另一邊用 ul 包住 li 當作 navbar 的選單，並增加改變顏色的效果，因為使用 float 排版，要分別設定圖片跟 navbar 的浮動方向。 HTML 架構 123456789101112131415&lt;div id=&quot;header&quot;&gt; &lt;div class=&quot;container clearfix&quot;&gt; &lt;div id=&quot;logo&quot;&gt; &lt;img src=&quot;images/ms-icon-144x144.png&quot; width=&quot;112&quot; height=&quot;100&quot; alt=&quot;Skater&quot;&gt; &lt;/div&gt; &lt;div id=&quot;nav&quot;&gt; &lt;ul class=&quot;clearfix&quot;&gt; &lt;li&gt;&lt;a href=&quot;index.html&quot;&gt;home&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;about.html&quot;&gt;about&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;contact.html&quot;&gt;contact&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#&quot;&gt;&lt;i class=&quot;icon-basket&quot;&gt;&lt;/i&gt;cart&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt;&lt;/div&gt; CSS 部分 123456789101112131415161718192021222324#logo { float: left;}#nav { float: right; text-transform: uppercase; line-height: 100px;}#nav li { float: left;}#nav a { padding: 0 12px; color: #333; text-decoration: none; font-size: 14px;}#nav a:hover { color: #d6b161;} 首圖是用整個區塊的背景圖片呈現，加上 h1 標題。 HTML 架構 12345&lt;div class=&quot;slider&quot;&gt; &lt;span&gt; &lt;h1&gt;explore &amp;emsp; dare &amp;emsp; wonder&lt;/h1&gt; &lt;/span&gt;&lt;/div&gt; CSS 部分 123456789101112131415161718slider { background-image: url(../images/cover.jpg); background-size: cover; background-position: 50% 50%; background-repeat: no-repeat; width: 100%; height: 550px; position: relative;}.slider span { position: absolute; margin: 0 auto; top: 56%; left: 28.5%; transform: translateY(-50%);} 商品的 showcase 和首圖概念一樣，用區塊的背景圖片去呈現，為了給左邊留白寬度沒有設定 100%，標題文字則用兩種顏色呈現，加入一個 a 連結的 button，並做了改變顏色的動畫。 HTML 架構 1234567&lt;div class=&quot;new-collection&quot;&gt; &lt;div class=&quot;container clearfix&quot;&gt; &lt;div class=&quot;title&quot;&gt;&lt;span class=&quot;golden-title&quot;&gt;new&lt;/span&gt;&lt;br&gt;colle-&lt;br&gt;ction&lt;/div&gt; &lt;a href=&quot;shop.html&quot; class=&quot;button link&quot;&gt;see all&lt;/a&gt; &lt;div class=&quot;background&quot;&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; CSS 部分 123456789101112131415161718192021222324252627282930313233343536373839.background { background-image: url(../images/collection.jpg); background-size: cover; background-position: 50% 100%; width: 89%; height: 450px; float: right; margin-top: -107px;}.new-collection .title { position: absolute; top: 120px; font-size: 70px; font-weight: bold; color: #000; text-transform: uppercase; letter-spacing: 15px; float: left;}.new-collection .golden-title { color: #d6b161;}.button.link { position: relative; top: 240px; padding: 15px 60px; background: #000; color: #fff; -webkit-transition: 0.2s linear all; transition: 0.2s linear all;}.button.link:hover { background: #d6b161; color: #fff;} 商品區塊分為三個欄位，排版上設定 float:left width:33.3%，內容則加入商品圖片、商品標題跟價格。 HTML 架構 123456789101112131415&lt;div class=&quot;products&quot;&gt; &lt;ul class=&quot;clearfix row&quot;&gt; &lt;li class=&quot;col-4 product&quot;&gt; &lt;div class=&quot;thumbnail&quot;&gt; &lt;img src=&quot;images/product-1.jpg&quot; alt=&quot;product&quot;&gt; &lt;/div&gt; &lt;div class=&quot;info&quot;&gt; &lt;h3 class=&quot;title&quot;&gt; &lt;a href=&quot;#&quot;&gt;World Industries Skateboard Graffiti&lt;/a&gt; &lt;/h3&gt; &lt;div class=&quot;price&quot;&gt;$149.99&lt;/div&gt; &lt;/div&gt; &lt;/li&gt; &lt;/ul&gt;&lt;/div&gt; CSS 部分 1234.col-4 { float: left; width: 33.3333333%;} footer 分為左邊的 copyright 以及右邊的社群連結，一樣要分別設定個別的浮動方向。 社群連結是利用在 a 連結裡面放入圖片的方式呈現，在 css 方面設定 display:inline-blick 讓我們設定 width 跟 height 屬性。 HTML 架構 12345678910111213141516171819202122232425262728&lt;div id=&quot;footer&quot;&gt; &lt;div class=&quot;container clearfix&quot;&gt; &lt;div class=&quot;copyright&quot;&gt; &lt;div class=&quot;title&quot;&gt;Copyright &amp;copy; Just Skate 2020&lt;/div&gt; &lt;div class=&quot;subtitle&quot;&gt;Trademarks belong to their respective owners. All rights reserved.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;social-media&quot;&gt; &lt;ul class=&quot;clearfix&quot;&gt; &lt;li&gt; &lt;a href=&quot;https://www.facebook.com/&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;images/social-facebook.png&quot; alt=&quot;facebook&quot;&gt; &lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&quot;https://twitter.com/?lang=en&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;images/social-twitter.png&quot; alt=&quot;twitter&quot;&gt; &lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&quot;https://www.instagram.com/&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;images/social-instagram.png&quot; alt=&quot;instagram&quot;&gt; &lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt;&lt;/div&gt; CSS 部分 123456789101112131415161718192021#footer .copyright { float: left;}#footer .social-media { float: right;}#footer .social-media li { float: left;}#footer .social-media a { display: inline-block; margin: 10px; width: auto; height: 20px; line-height: 20px; text-align: center; text-decoration: none;} About About 頁面的首圖跟標語跟首頁一樣，用整個區塊的背景圖片呈現，加上 h1 標題。 HTML 架構 12345&lt;div class=&quot;header&quot;&gt; &lt;div class=&quot;container&quot;&gt; &lt;h1 class=&quot;title&quot;&gt;our story&lt;/h1&gt; &lt;/div&gt;&lt;/div&gt; CSS 部分 123456789101112131415#content .header { padding: 200px 0; background-image: url(../images/about.jpg); background-size: cover; background-position: 50% 31%;}#content .header .title { float: left; margin: 0; color: #fff; text-transform: uppercase; font-weight: bold; letter-spacing: 2px; font-size: 24px;} 成員介紹分為標題 h2、敘述 p 以及下方的成員欄位，當滑鼠移到成員欄位時會有上移以及變色的效果。 HTML 架構 ( 這邊和首頁商品架構類似，只說明動畫部分 ) 12345678910111213141516&lt;div class=&quot;wrap&quot;&gt; &lt;div class=&quot;avatar&quot;&gt; &lt;img src=&quot;images/member-1.jpg&quot; alt=&quot;avatar&quot;&gt; &lt;/div&gt; &lt;div class=&quot;info&quot;&gt; &lt;h3 class=&quot;name&quot;&gt;Benjamin Parker&lt;/h3&gt; &lt;div class=&quot;title&quot;&gt;CEO &amp; Co-Founder&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;social-media&quot;&gt; &lt;ul class=&quot;clearfix&quot;&gt; &lt;li&gt;&lt;a href=&quot;https://www.facebook.com/&quot; target=&quot;_blank&quot;&gt;&lt;i class=&quot;icon-facebook&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://twitter.com/?lang=en&quot; target=&quot;_blank&quot;&gt;&lt;i class=&quot;icon-twitter&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://www.linkedin.com/&quot; target=&quot;_blank&quot;&gt;&lt;i class=&quot;icon-linkedin&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt;&lt;/div&gt; CSS 動畫部分 12345678910111213141516171819.about #content .member:hover .title { color: #fff;}.about #content .member:hover a { color: #fff;}.col-4.member { transform: translateY(0px); transition: .5s;}.col-4.member:hover { transform: translateY(-40px);}.col-4.member:hover .wrap { background-image: linear-gradient(0deg, #d6b161, #fff);} Contact Contact 頁面把首圖換成了 google map，主要是用 iframe 這個標籤來呈現，詳細使用方式可以參考網站嵌入google map技術，並給予高度跟寬度來調整呈現的樣子。 12&lt;iframe src=&quot;https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3614.9390098163053!2d121.56572361500625!3d25.03614378397135!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3442ab43ab5a86c1%3A0x400f5859b70ce0b7!2zMTEw5Y-w5YyX5biC5L-h576p5Y2A5p2-5aO96LevMTPomZ8!5e0!3m2!1szh-TW!2stw!4v1573633685991!5m2!1szh-TW!2stw&quot; width=&quot;100%&quot; height=&quot;450&quot; frameborder=&quot;0&quot; style=&quot;border:0&quot; allowfullscreen&gt;&lt;/iframe&gt; 下方分為兩個區塊，分別是商店資訊區塊以及表單的區塊，文字部分是 h3 標題搭配 p 敘述，表單每個 div 都有 label input，在 Name 跟 Email 多加 required 要求一定要輸入相關資訊，寬度給予 100% 並加上 border。 HTML 架構：商店資訊 123456789101112&lt;div class=&quot;row&quot;&gt; &lt;div class=&quot;col-4 office-info&quot;&gt; &lt;h3 class=&quot;title&quot;&gt;our store&lt;/h3&gt; &lt;div class=&quot;contact-info&quot;&gt; &lt;p class=&quot;address&quot;&gt;No. 13, Songshou Rd., Xinyi Dist., Taipei City 110, Taiwan (R.O.C.)&lt;/p&gt; &lt;div class=&quot;info&quot;&gt;以下省略&lt;/div&gt; &lt;h3 class=&quot;title&quot;&gt;opening hour&lt;/h3&gt; &lt;div class=&quot;contact-info&quot;&gt; &lt;div class=&quot;weekday&quot;&gt;Monday - Friday: 11:00 - 19:30&lt;/div&gt; &lt;div class=&quot;holiday&quot;&gt;Saturday - Sunday: 11:00 - 20:00&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; HTML 架構：表單部分 1234567891011121314151617181920&lt;div class=&quot;col-8 question&quot;&gt; &lt;h3 class=&quot;title&quot;&gt;have questions?&lt;/h3&gt; &lt;p&gt;Please fill in the fields below: * = Required&lt;br&gt;We'll get back to you within 48-72 hrs.&lt;/p&gt; &lt;form action=&quot;#&quot; class=&quot;contact-form&quot; method=&quot;post&quot;&gt; &lt;div class=&quot;row&quot;&gt; &lt;div class=&quot;col-6&quot;&gt; &lt;label for=&quot;name&quot;&gt;name *&lt;/label&gt; &lt;input type=&quot;text&quot; name=&quot;name&quot; id=&quot;name&quot; required&gt; &lt;/div&gt; &lt;div class=&quot;col-6&quot;&gt; &lt;label for=&quot;email&quot;&gt;email *&lt;/label&gt; &lt;input type=&quot;text&quot; name=&quot;email&quot; id=&quot;email&quot; required&gt; &lt;div class=&quot;col-6&quot;&gt;以下省略&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;col-12&quot;&gt; &lt;label for=&quot;comments&quot;&gt;comments&lt;/label&gt; &lt;textarea name=&quot;comments&quot; id=&quot;comments&quot;&gt;&lt;/textarea&gt; &lt;/div&gt; &lt;/form&gt;&lt;/div&gt; CSS 表單部分 123456.contact-form input,.contact-form textarea { padding: 6px 12px; border: 1px solid #e5e5e5; width: 100%;} Go top Go-top 快速回到首頁按鈕，用 a 連結回到 #header 加上 icon 圖示呈現，position:fixed 的元素會相對於瀏覽器視窗來定位，即便頁面捲動，還是會固定在相同的位置。 1&lt;a href=&quot;#header&quot; id=&quot;go-top&quot;&gt;&lt;i class=&quot;icon-go-top&quot;&gt;&lt;/i&gt;&lt;/a&gt; 123456789101112#go-top { position: fixed; right: 20px; bottom: 35px; width: 40px; height: 40px; background: rgba(0, 0, 0, .6); color: #fff; text-align: center; line-height: 40px; text-decoration: none;}","link":"/2020/11/25/RootsSkate/"},{"title":"shell環境安裝","text":"WSL 是什麼？Ｗindows Subsystem for Linux，簡稱 WSL，適用於 Linux 的 Windows 子系統，可在 Windows 上執行 Linux 環境。 安裝 WSLStep 1 - 啟用 WSL以系統管理員身分開啟 PowerShell 執行下面這段 1dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart 確認執行完出現下列畫面 Step 2 - 更新至 WSL2先確認您的版本及組件號碼是否符合以下條件 Windows 標誌鍵 + R，輸入 winver 確認版本 X64 系統： 版本 1903 或更高版本，含組建 18362 或更高組建。 ARM64 系統： 版本 2004 或更高版本，含組建 19041 或更高組建。 低於 18362 的組建不支援 WSL 2。 使用 Windows 更新小幫手來更新您的 Windows 版本。 Step 3 - 啟用虛擬機功能一樣以系統管理員身分開啟 PowerShell 並執行： 1dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart 確認執行完出現下列畫面 重新啟動電腦已完成 WSL並更新至 WSL2 Step 4 - 下載 Linux 核心更新套件WSL2 Linx 更新套件 Step 5 - 將 WSL2 設為預設版本一樣以系統管理員身分開啟 PowerShell 並執行： 1wsl --set-default-version 2 這部分出現以下錯誤，不過不影響之後的安裝 12wsl : 無法辨識 'wsl' 詞彙是否為 Cmdlet、函數、指令檔或可執行程式的名稱。請檢查名稱拼字是否正確，如果包含路徑的話，請確認路徑是否正確，然後再試一次。 安裝 Linux 發行版本從 Microsoft Store 上選取一個 Linux 發行版本，第一次啟動時需要設定使用者帳戶和密碼 設定完成畫面，之後想要重設密碼或忘記的話可以參考 這邊 參考資料在 windows10 安裝 bash&amp; oh-my-zsh 為新的 Linux 發行版本建立使用者帳戶和密碼","link":"/2020/11/19/shell%E7%92%B0%E5%A2%83%E5%AE%89%E8%A3%9D/"}],"tags":[{"name":"Linux","slug":"Linux","link":"/tags/Linux/"},{"name":"Command Line","slug":"Command-Line","link":"/tags/Command-Line/"},{"name":"Git","slug":"Git","link":"/tags/Git/"},{"name":"GitHub","slug":"GitHub","link":"/tags/GitHub/"},{"name":"Markdown","slug":"Markdown","link":"/tags/Markdown/"},{"name":"HEXO BLOG","slug":"HEXO-BLOG","link":"/tags/HEXO-BLOG/"},{"name":"HTML","slug":"HTML","link":"/tags/HTML/"},{"name":"CSS","slug":"CSS","link":"/tags/CSS/"},{"name":"WSL","slug":"WSL","link":"/tags/WSL/"}],"categories":[]}