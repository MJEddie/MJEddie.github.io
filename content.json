{"pages":[],"posts":[{"title":"Command Line 常用指令","text":"Command Line 是什麼？Command-Line Interface（命令列介面，簡稱CLI）是在圖形使用者介面得到普及之前使用最為廣泛的使用者介面，它通常不支援滑鼠，用戶通過鍵盤輸入指令，電腦接收到指令後，予以執行。也有人稱之為文字使用者介面（character user interface, CUI） Command Line 基本指令 pwd：print working directory，印出現在資料夾位置 ls：list contents，列出資料夾內所有檔案 ls -l：列出詳細資訊 ls -a：可以看到隱藏的檔案 ls -al:列出詳細資訊，包含隱藏檔案 ls -R：可以看到所有的子目錄，較少用 可以看到 ls -l 中列出的資訊中包含擁有者、權限以及上次修改時間 cd：change directory，切換資料夾 cd ..：上層資料夾 cd ../..：上上層資料夾 指令練習 mkdir：make directory，建立資料夾 指令練習，可以看到新增了一個 “practice” 資料夾 touch：新增檔案，如果輸入的檔案存在則會修改檔案時間 指令練習，進入剛新增的資料夾，新增一個 “index.html” 的檔案 cp：copy，複製檔案 指令練習，複製 “index.html” 為 “about.html” mv：move，移動檔案，或是重新命名檔案名稱 指令練習，移動 “about.html” 到上一層 “Music” 資料夾中 cd 可使用相對路徑或是絕對路徑，要將檔案移動到上一層時必須使用絕對路徑 將剛移動過來的 “about.html” 重新命名為 “index.html” rm：remove，刪除檔案 rmdir，刪除資料夾 rm -rf，強制刪除檔案，小心使用 指令練習，將剛新增的 “practice” 資料夾刪除 cat：查看檔案內容 可以看到 “about.html” 裡的內容為 “Hello” 原本 about.html 裡是沒有東西，先用 vim 指令編輯 about.html更多 vim 的操作可以參考 簡明 Vim 文字編輯器操作入門教學 學習資料Linux Command","link":"/2020/11/20/Command-Line%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/"},{"title":"Hexo Blog 架設","text":"前言第一篇文章來記錄一下 Hexo Blog 的架設過程，也是參考了很多資料才寫出來的，如果有錯誤的地方還請不吝指教。 安裝需求在安裝 HEXO 前我們要先確認電腦已經安裝好 Node.js 跟 Git ，因為 Hexo 是基於 Node.js 的開發套件，所以要使用前必須要先安裝 NPM(Node Package Manager) ， Git 則是為了能夠在 GitHub 上架設網站的伺服器，還沒安裝的話到官網下載安裝即可。 安裝 HEXO確認 Node.js &amp; Git 安裝好之後，終端機輸入: $ npm install hexo-cli -g (完成後用 hexo v 指令確認是否安裝成功，有出現版本號就完成安裝) $ hexo init blog $ cd blog $ npm install $ hexo server or $ hexo s 設定 HEXO_config.yml網站配置檔案，可以修改大部分的設定，像是標題、敘述、支援語言、主題等。 themes網站主題放置的資料夾，官網有提供許多主題供使用。 第一篇文章輸入指令 $ hexo new &lt;title&gt; 後在source/_posts 中將看到 “ 佈署上 GitHub修改 _config.yml 12deploy: type: git 安裝 hexo-deployer-git 1$ npm install hexo-deployer-git --save 修改 _config.yml 1234deploy: type: git repo: https://github.com/&lt;yourAccount&gt;/&lt;repo&gt; branch: &lt;your branch&gt; 執行 hexo deploy -g 就可以將網站佈署到 GitHub上。接著輸入 &lt;yourAccount&gt;.github.io就能看到自己的網站囉。","link":"/2020/11/16/Hexo-Blog/"},{"title":"shell環境安裝","text":"WSL 是什麼？Ｗindows Subsystem for Linux，簡稱 WSL，適用於 Linux 的 Windows 子系統，可在 Windows 上執行 Linux 環境。 安裝 WSLStep 1 - 啟用 WSL以系統管理員身分開啟 PowerShell 執行下面這段 1dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart 確認執行完出現下列畫面 Step 2 - 更新至 WSL2先確認您的版本及組件號碼是否符合以下條件 Windows 標誌鍵 + R，輸入 winver 確認版本 X64 系統： 版本 1903 或更高版本，含組建 18362 或更高組建。 ARM64 系統： 版本 2004 或更高版本，含組建 19041 或更高組建。 低於 18362 的組建不支援 WSL 2。 使用 Windows 更新小幫手來更新您的 Windows 版本。 Step 3 - 啟用虛擬機功能一樣以系統管理員身分開啟 PowerShell 並執行： 1dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart 確認執行完出現下列畫面 重新啟動電腦已完成 WSL並更新至 WSL2 Step 4 - 下載 Linux 核心更新套件WSL2 Linx 更新套件 Step 5 - 將 WSL2 設為預設版本一樣以系統管理員身分開啟 PowerShell 並執行： 1wsl --set-default-version 2 這部分出現以下錯誤，不過不影響之後的安裝 12wsl : 無法辨識 'wsl' 詞彙是否為 Cmdlet、函數、指令檔或可執行程式的名稱。請檢查名稱拼字是否正確，如果包含路徑的話，請確認路徑是否正確，然後再試一次。 安裝 Linux 發行版本從 Microsoft Store 上選取一個 Linux 發行版本，第一次啟動時需要設定使用者帳戶和密碼 設定完成畫面，之後想要重設密碼或忘記的話可以參考 這邊 參考資料在 windows10 安裝 bash&amp; oh-my-zsh 為新的 Linux 發行版本建立使用者帳戶和密碼","link":"/2020/11/19/shell%E7%92%B0%E5%A2%83%E5%AE%89%E8%A3%9D/"},{"title":"Git &amp; Github 入門","text":"Git 是什麼？一種分散式版本控制系統 (Distributed Version Control Systems)，可藉由它產生一個數據庫 (repository)，並且做到分散式版本控制。由於可在多處放置同一份程式碼、歷史紀錄追蹤與回朔，讓協同開發變得容易。 Git 和 GitHub 的差異git 是一套軟體系統，而 GitHub 則是運用 git 提供程式原始碼版本控制與代管服務的服務平台。 Git 安裝Git 軟體安裝 Git 版本控制基本觀念 Git 常用指令 初始化數據庫： git init 查詢當前狀態：git status 將檔案加入到索引：git add . 將索引檔案變成一個更新(commit)：git commit -m &quot;修改內容&quot; 觀察 commit 歷史紀錄： git log 下載遠端數據庫： git clone 數據庫網址 更新遠端數據庫： git push origin master GitHub 專案建立申請完 Github 帳號後點選右上角來新增 new repository 這邊輸入專案的名稱 專案建立之後如果是全新開始，請依「create a new repository on the command line」的指示進行；如果是要上傳現存專案，則依照「push an existing repository from the command line」指示進行。 GitHub page 實作進入到專案資料夾，git status 確認資料夾內的狀態，可以看到 index.html 跟 css 資料夾裡的 main.css 檔案還未加入索引 這邊我用舊有專案示範，有先修改內容，所以索引內還沒有修改後的 index.html 跟 main.css 把修改後的 index.html 和 main.css 用 git add 指令加入索引中，再次確認 git 狀態，可以看到檔案顏色變成綠色，代表已經加入 接著 git commit -m &quot;2020style&quot; 加入到本地數據庫，並註解 “2020style” 再來用 git branch gh-page 來新增名為 gh-page 的分支，之後用 git branch 來確認是否新增成功，成功的話可以看到我們現在有兩個分支 輸入 git checkout gh-page 切換到 gh-page 分支 輸入 git push將本地的檔案 push 到 GitHub 上，但是 GitHub 還沒有這個分支，所以會提示我們要輸入以下指令來完成 git push --set-upstream origin gh-pages 接下來在 GitHub 頁面上可以看到分支建立成功 剛剛新增的檔案也在分支內 之後就可以透過網址來瀏覽我們的靜態網頁https://mjeddie.github.io/RootsSkate/ 參考資料Git 官方教學文件 Git 與 Github 是什麼？如何使用 Git？ 延伸閱讀5xruby - 為你自己學 Git ihower 的 Git 教室 保哥 - 30 天精通 Git 版本控管 連猴子都能懂得 Git 入門教學","link":"/2020/11/21/Git%E5%85%A5%E9%96%80/"},{"title":"Markdown語法","text":"Markdown 語法是什麼？ Markdown 是一種輕量級標記式語言，為了實現易讀易寫的特性 Markdown 語法全由標點符號所組成，讓它們看起來就像是所要表達的意思。 因為其易讀易寫的特性，目前許多網站都廣泛使用 Markdown 語法。 一、常用功能 Markdown語法：123456789101112斜體：在兩邊加上 *星號* 或是 _底線_粗體：在兩邊加上 **兩個星號** 或是 __兩個底線__也可以用 **星號 與 _底線_**刪除線：在兩邊加上 ~~兩個波浪~~引言(註解)：&gt; 換行：需在最後面+`兩個空白鍵`·· &gt; 先以··表示空白 顯示結果：斜體：在兩邊加上 星號 或是 底線 粗體：在兩邊加上 兩個星號 或是 兩個底線 也可以用 星號 與 底線 刪除線：在兩邊加上 兩個波浪 引用文字(註解)： 換行：需在最後面+兩個空白鍵··先以··表示空白 二、標題Markdown語法：12345678Markdown 提供了六種規格的，分別對應 Html 標籤中的`&lt;h1&gt; ~ &lt;h6&gt;`# H1## H2### H3#### H4##### H5###### H6 顯示結果：H1H2H3H4H5H6三、清單Markdown 支援無序清單和有序清單，要在清單下加入段落只要 +tab 就好。無序清單可使用星號、加號或是減號作為標記： Markdown語法：123* 無序清單+ 這也是清單- 這還是清單 顯示結果： 無序清單 這也是清單 這還是清單 有序清單則使用數字接一個英文句點： Markdown語法：121. 有序清單１2. 有序清單２ 顯示結果： 有序清單１ 有序清單２ 四、連結Markdown語法：1234567891011* 連結兩邊加上`&lt;` `&gt;`就會產生超連結 &lt;https://images.unsplash.com/photo-1584342864307-03dae979b7db?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=400&amp;q=80&gt; * 名稱兩邊加上`[` `]`然後再連結兩邊加上`(` `)`就可以將連結替換成文字連結 [傳送門](https://images.unsplash.com/photo-1584342864307-03dae979b7db?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=400&amp;q=80) * 將`[` `]`前+`!`，則可以產生圖片 (把滑鼠指向圖片可以看到註解） ![圖片參考名稱](https://images.unsplash.com/photo-1584342864307-03dae979b7db?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=400&amp;q=80 &quot;傳送門&quot;) 顯示結果： 連結兩邊加上&lt; &gt;就會產生超連結 https://images.unsplash.com/photo-1584342864307-03dae979b7db?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=400&amp;q=80 名稱兩邊加上[ ]然後再連結兩邊加上( )就可以將連結替換成文字連結 傳送門 將[ ]前+!，則可以產生圖片 (把滑鼠指向圖片可以看到註解） 五、程式碼123行內的 `程式碼` 用 `反引號` 包起來區塊的 `程式碼` 用 ```三個反引號```包起來記得要加上語言名稱 Markdown語法：12var s = &quot;JavaScript Syntax Highlighter&quot;;alert(s); 12$s = &quot;PHP Syntax Highlighter&quot;;echo $s; 顯示結果：12var s = &quot;JavaScript Syntax Highlighter&quot;;alert(s); 12$s = &quot;PHP Syntax Highlighter&quot;;echo $s; 參考資料Markdown 文件","link":"/2020/11/17/Markdown%E8%AA%9E%E6%B3%95/"}],"tags":[{"name":"Linux","slug":"Linux","link":"/tags/Linux/"},{"name":"Command Line","slug":"Command-Line","link":"/tags/Command-Line/"},{"name":"HEXO BLOG","slug":"HEXO-BLOG","link":"/tags/HEXO-BLOG/"},{"name":"WSL","slug":"WSL","link":"/tags/WSL/"},{"name":"Git","slug":"Git","link":"/tags/Git/"},{"name":"GitHub","slug":"GitHub","link":"/tags/GitHub/"},{"name":"Markdown","slug":"Markdown","link":"/tags/Markdown/"}],"categories":[]}